logstepPAYLOAD:
  log: ${incoming.body.msg[0].text}

earlyassign:
  assign:
    recipient_id: ${incoming.body.msg[0].recipient_id}

# checkfaultyservice:
#   switch:
#     - condition: ${incoming.body.msg == null}
#       next: noService

checkservice:
  switch:
    - condition: ${incoming.body.msg === "#laborMarket"}
      next: laborMarket
    - condition: ${incoming.body.msg === "#estimatedSubsidence"}
      next: estimatedSubsidence
    - condition: ${incoming.body.msg === "#priceIndex"}
      next: priceIndex
    - condition: ${incoming.body.msg === "#nordpool"}
      next: nordpoolService
    - condition: ${incoming.body.msg === "#nordpool2"}
      next: nordpool2Service
    - condition: ${incoming.body.msg === "#nordpool3"}
      next: nordpool3Service
    - condition: ${incoming.body.msg[0].text === "#rahvaAlgatus;"}
      next: initiativeEvents
    - condition: ${incoming.body.msg[0].text === "#rahvaAlgatusPopulaarne"}
      next: initiativeEventsPopular
    - condition: ${incoming.body.msg[0].text === "#recentFiveVoting"}
      next: riigikoguRecentVoting
    - condition: ${incoming.body.msg[0].text == null}
      next: noService
    - condition: ${incoming.body.msg[0].text.match(/^(#riigikoguIsikuKohalolu),(.*)/)?.[1].trim() === "#riigikoguIsikuKohalolu"}
      next: riigikoguAttendance
    - condition: ${incoming.body.msg[0].text.match(/^#/)}
      next: noService
  next: noService

laborMarket:
  call: http.get
  args:
    url: "[#CHATBOT_RUUTER_PUBLIC]/labour-market-headline-indicators"
  result: laborMarketRequest
  next: laborMarketAnswer

estimatedSubsidence:
  call: http.get
  args:
    url: "[#CHATBOT_RUUTER_PUBLIC]/estimated-subsidence-minimum"
  result: estimatedSubsidenceRequest
  next: estimatedSubsidenceAnswer

priceIndex:
  call: http.get
  args:
    url: "[#CHATBOT_RUUTER_PUBLIC]/price-index-per-month"
  result: priceIndexRequest
  next: priceIndexAnswer

nordpoolService:
  call: http.get
  args:
    url: "[#CHATBOT_RUUTER_PUBLIC]/nordpool"
  result: nordpoolRequest
  next: nordpoolAnswer

nordpool2Service:
  call: http.get
  args:
    url: "[#CHATBOT_RUUTER_PUBLIC]/nordpool2"
  result: nordpool2Request
  next: nordpool2Answer

nordpool3Service:
  call: http.get
  args:
    url: "[#CHATBOT_RUUTER_PUBLIC]/nordpool3"
  result: nordpool3Request
  next: nordpool3Answer

initiativeEvents:
  call: http.get
  args:
    url: "[#CHATBOT_RUUTER_PUBLIC_INTERNAL_CS]/rahvaalgatus/initiative-events-latest"
  result: ServiceResult

logstepEVENTS:
  log: ${ServiceResult.response}
logstepEVENTS2:
  log: ${ServiceResult.response.body}
logstepEVENTS3:
  log: ${ServiceResult.response.body.response}
  next: assign_step_events

assign_step_events:
  assign:
    call_service_result: 
    - text: ${ServiceResult.response.body.response.replace(/\n/g," ")}
      recipient_id: ${recipient_id}

return_step_events:
  return: ${call_service_result}
  next: end

initiativeEventsPopular:
  call: http.get
  args:
    url: "[#CHATBOT_RUUTER_PUBLIC_INTERNAL_CS]/rahvaalgatus/initiative-events-popular"
  result: ServiceResult

logstepEVENTSPOPULAR:
  log: ${ServiceResult.response}
logstepEVENTS2POPULAR2:
  log: ${ServiceResult.response.body}
logstepEVENTS3POPULAR3:
  log: ${ServiceResult.response.body.response}
  next: assign_step_events_popular

assign_step_events_popular:
  assign:
    call_service_result: 
    - text: ${ServiceResult.response.body.response.replace(/\n/g," ")}
      recipient_id: ${recipient_id}

return_step_events_popular:
  return: ${call_service_result}
  next: end

riigikoguAttendance:
  call: http.post
  args:
    url: "[#CHATBOT_RUUTER_PUBLIC_INTERNAL_CS]/riigikogu/riigikogu-attendance"
    body:
      memberName: ${incoming.body.msg[0].text.match(/^(#riigikoguIsikuKohalolu),(.*)/)[2].trim()}
  result: ServiceResult
  next: assign_step_attendance

assign_step_attendance:
  assign:
    call_service_result: 
    - text: ${ServiceResult.response.body.response}
      recipient_id: ${recipient_id}

return_step_attendance:
  return: ${call_service_result}
  next: end

riigikoguRecentVoting:
  call: http.get
  args:
    url: "[#CHATBOT_RUUTER_PUBLIC_INTERNAL_CS]/riigikogu/riigikogu-five-latest-votings"
  result: ServiceResult

assign_step_voting:
  assign:
    call_service_result: 
    - text: ${ServiceResult.response.body.response.replace(/"/g,"")}
      recipient_id: ${recipient_id}

return_step_voting:
  return: ${call_service_result}
  next: end  

noService:
  return: "${incoming.body.msg} , POLE TEENUST"
  status: 400
  next: end
